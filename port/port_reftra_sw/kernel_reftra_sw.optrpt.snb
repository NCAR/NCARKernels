
Begin optimization report for: KERNEL_REFTRA_SW

    Report from: Vector optimizations [vec]


LOOP BEGIN at kernel_reftra_sw.F90(482,8) inlined into kernel_reftra_sw.F90(39,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: KERNEL_DRIVER

    Report from: Vector optimizations [vec]


LOOP BEGIN at kernel_reftra_sw.F90(299,9) inlined into kernel_reftra_sw.F90(109,10)
   remark #15389: vectorization support: reference hvrrft has unaligned access
   remark #15389: vectorization support: reference __STRLITPACKVAR_14 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 1.420 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(305,9) inlined into kernel_reftra_sw.F90(109,10)
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(307,17) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(308,17) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(309,17) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(310,17) ]
   remark #15388: vectorization support: reference ztauc has aligned access   [ kernel_reftra_sw.F90(312,17) ]
   remark #15388: vectorization support: reference zomcc has aligned access   [ kernel_reftra_sw.F90(313,17) ]
   remark #15388: vectorization support: reference zgcc has aligned access   [ kernel_reftra_sw.F90(314,17) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(362,21) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(363,21) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(363,21) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(367,21) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(368,21) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(368,21) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(374,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(375,25) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(376,25) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(377,25) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(449,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(450,25) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(452,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(453,25) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(460,21) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(461,21) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(307,17) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(308,17) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(309,17) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(310,17) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(362,21) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(363,21) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(367,21) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(368,21) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(374,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(375,25) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(376,25) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(377,25) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(449,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(450,25) ]
   remark #15388: vectorization support: reference zrefc has aligned access   [ kernel_reftra_sw.F90(452,25) ]
   remark #15388: vectorization support: reference ztrac has aligned access   [ kernel_reftra_sw.F90(453,25) ]
   remark #15388: vectorization support: reference zrefdc has aligned access   [ kernel_reftra_sw.F90(460,21) ]
   remark #15388: vectorization support: reference ztradc has aligned access   [ kernel_reftra_sw.F90(461,21) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 15 
   remark #15449: unmasked aligned unit stride stores: 18 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 375 
   remark #15477: vector loop cost: 863.000 
   remark #15478: estimated potential speedup: 0.430 
   remark #15479: lightweight vector operations: 668 
   remark #15480: medium-overhead vector operations: 2 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(112,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(112,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(112,10)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(116,14)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(116,14)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(116,14)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(121,20)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 4.350 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(121,20)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(121,20)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(122,50)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(122,50)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(123,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(123,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(123,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(124,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(124,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(124,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(125,74)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(125,74)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(126,66)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(126,66)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(129,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(129,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(129,10)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(133,14)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(133,14)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(133,14)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(138,20)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 4.350 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(138,20)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(138,20)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(139,50)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(139,50)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(140,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(140,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(140,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(141,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(141,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(141,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(142,74)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(142,74)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(143,66)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(143,66)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(146,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(146,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(146,10)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(150,14)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(150,14)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(150,14)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(155,20)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 4.350 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(155,20)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(155,20)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(156,50)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(156,50)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(157,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(157,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(157,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(158,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(158,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(158,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(159,73)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(159,73)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(160,65)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(160,65)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(163,10)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(163,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(163,10)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(167,14)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 13.000 
   remark #15478: estimated potential speedup: 2.940 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(167,14)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(167,14)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(172,20)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 4.350 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(172,20)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(172,20)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(173,50)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(173,50)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(174,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(174,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(174,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(175,46)
<Distributed chunk1>
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(175,46)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(175,46)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15475: --- begin vector loop cost summary ---
   remark #15477: vector loop cost: 0.750 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(176,73)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(176,73)
<Remainder>
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(177,65)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model
LOOP END

LOOP BEGIN at kernel_reftra_sw.F90(177,65)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: KGEN_GET_NEWUNIT

    Report from: Vector optimizations [vec]


LOOP BEGIN at kernel_reftra_sw.F90(482,8)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================
